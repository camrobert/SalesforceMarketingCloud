<script runat="server">
  Platform.Load("Core","1");
  /*==== Config ====*/
  var app_apiappid = "xxxxxxxxxxx";                       //AppID from the App Credentials section in the Slack API Basic Information
  var app_VerificationToken = "yyyyyyyyyyyyyyyyyyyyyyyy"; //Verification Token from the App Credentials section in the Slack API Basic Information
  var app_channel_name = ["slack-channel-name"];          //Array of Authorised Slack Channel Names (text, comma seperated) exactly as shown in Slack
  var logit_de = DataExtension.Init('EXTERNAL KEY');      //Log DE Key
  
  /*==== SETUP ====*/
  var post = Platform.Request.GetPostData();
  var json = Platform.Function.ParseJSON(post);
  var posttext = Platform.Request.GetFormField('text');
  var inbound_token = Platform.Request.GetFormField('token');
  var inbound_api_app_id = Platform.Request.GetFormField('api_app_id');
  var inbound_channel_name = Platform.Request.GetFormField('channel_name');
  logit("Inbound Post:"+Stringify(json));

  /*==== Verification ====*/
  if ((inbound_api_app_id == app_apiappid) && (inbound_token == app_VerificationToken) && (app_channel_name.toString().indexOf(inbound_channel_name) >= 0)) {
    //Success
    //Do Function Here

    var prox = new Script.Util.WSProxy();
    var dearray = [];
    var req = prox.retrieve("DataExtension", ["Name","CustomerKey","CategoryID"], {Property: "Name",SimpleOperator: "equals",Value: posttext});
    if (req.Results.length > 0) {
      var folderid = req.Results[0].CategoryID;
      do {
        var data = prox.retrieve("DataFolder", ["Name","ContentType","ID","CustomerKey","ParentFolder.Name","ParentFolder.ID"], {Property: "ID",SimpleOperator: "equals",Value: folderid});
        folderid = data.Results[0].ParentFolder.ID;
        dearray.push(data.Results[0].Name);
      } while (data.Results[0].ParentFolder.ID != 0);
      dearray.reverse();
      var depath = dearray.join("/")+"/"+posttext;
      var message = "*Found "+posttext+"*\n"+depath;
    } else {
      var message = "*Could Not Find "+posttext+"* :cry:";
    }
    var response_json = { "blocks": [ { "type": "section", "text": { "type": "mrkdwn", "text": message } } ] };

  } else {
    //Unauthorised
    var response_json = { "blocks": [ { "type": "section", "text": { "type": "mrkdwn", "text": "*Not Authorised* :ghost:\n Contact: Firstname Lastname" } } ] };
  logit("Unauthorised Attempt:"+Stringify(json));
  }

  Write(Stringify(response_json));

  function logit(message) {
    logit_de.Rows.Add({"Text":message});
  };
</script>
